plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.fruit_e_commerce"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.fruit_e_commerce"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        // manifestPlaceholders = [applicationName: "com.example.fruit_e_commerce"]
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }

    // --- START: Added for Kotlin Duplicate Class Fix ---
    configurations.all {
        resolutionStrategy {
            // Force a specific version for Kotlin standard libraries to resolve conflicts.
            // IMPORTANT: Make sure this version matches the 'kotlin_version' in your project's
            // top-level build.gradle (android/build.gradle). Common versions are 1.8.22 or 1.9.0.
            // If you're unsure, try 1.8.22 first.
            force 'org.jetbrains.kotlin:kotlin-stdlib:1.8.22'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22'
        }
    }
    // --- END: Added for Kotlin Duplicate Class Fix ---
}

flutter {
    source = "../.."
}

dependencies {
    // START: Added to ensure Kotlin standard libraries are pulled with a consistent version
    // If you explicitly declare kotlin-stdlib in your dependencies, make sure its version
    // matches the 'force' versions above. Often, it's not needed here if other
    // dependencies pull it in correctly.
    // implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.22"
    // END: Added to ensure Kotlin standard libraries
}